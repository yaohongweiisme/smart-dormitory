<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.payment.statusManager.mapper.PaymentStatusMapper">
    
    <resultMap type="PaymentStatus" id="PaymentStatusResult">
        <result property="statusId"    column="status_id"    />
        <result property="projectId"    column="project_id"    />
        <result property="dormitoryId"    column="dormitory_id"    />
        <result property="status"    column="status"    />
        <result property="createTime"    column="create_time"    />
        <result property="finishTime"    column="finish_time"    />
    </resultMap>

    <sql id="selectPaymentStatusVo">
        select status_id, project_id, dormitory_id, status, create_time, finish_time from payment_status
    </sql>

    <select id="selectPaymentStatusList" parameterType="PaymentStatus" resultMap="PaymentStatusResult">
        <include refid="selectPaymentStatusVo"/>
        <where>  
            <if test="projectId != null "> and project_id = #{projectId}</if>
            <if test="dormitoryId != null  and dormitoryId != ''"> and dormitory_id = #{dormitoryId}</if>
            <if test="status != null "> and status = #{status}</if>
            <if test="finishTime != null "> and finish_time = #{finishTime}</if>
        </where>
    </select>
    
    <select id="selectPaymentStatusByStatusId" parameterType="Long" resultMap="PaymentStatusResult">
        <include refid="selectPaymentStatusVo"/>
        where status_id = #{statusId}
    </select>
        
    <insert id="insertPaymentStatus" parameterType="PaymentStatus" useGeneratedKeys="true" keyProperty="statusId">
        insert into payment_status
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="projectId != null">project_id,</if>
            <if test="dormitoryId != null">dormitory_id,</if>
            <if test="status != null">status,</if>
            <if test="createTime != null">create_time,</if>
            <if test="finishTime != null">finish_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="projectId != null">#{projectId},</if>
            <if test="dormitoryId != null">#{dormitoryId},</if>
            <if test="status != null">#{status},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="finishTime != null">#{finishTime},</if>
         </trim>
    </insert>

    <update id="updatePaymentStatus" parameterType="PaymentStatus">
        update payment_status
        <trim prefix="SET" suffixOverrides=",">
            <if test="projectId != null">project_id = #{projectId},</if>
            <if test="dormitoryId != null">dormitory_id = #{dormitoryId},</if>
            <if test="status != null">status = #{status},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="finishTime != null">finish_time = #{finishTime},</if>
        </trim>
        where status_id = #{statusId}
    </update>

    <delete id="deletePaymentStatusByStatusId" parameterType="Long">
        delete from payment_status where status_id = #{statusId}
    </delete>

    <delete id="deletePaymentStatusByStatusIds" parameterType="String">
        delete from payment_status where status_id in 
        <foreach item="statusId" collection="array" open="(" separator="," close=")">
            #{statusId}
        </foreach>
    </delete>

</mapper>