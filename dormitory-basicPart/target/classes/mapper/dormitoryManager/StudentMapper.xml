<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.dormitory.student.mapper.StudentMapper">
    
    <resultMap type="Student" id="StudentResult">
        <result property="stuId"    column="stu_id"    />
        <result property="name"    column="name"    />
        <result property="age"    column="age"    />
        <result property="sex"    column="sex"    />
        <result property="birthday"    column="birthday"    />
        <result property="department"    column="department"    />
        <result property="classes"    column="classes"    />
    </resultMap>

    <sql id="selectStudentVo">
        select stu_id, name, age, sex, birthday, department, classes from student
    </sql>

    <select id="selectStudentList" parameterType="Student" resultMap="StudentResult">
        <include refid="selectStudentVo"/>
        <where>  
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="age != null "> and age = #{age}</if>
            <if test="sex != null  and sex != ''"> and sex = #{sex}</if>
            <if test="birthday != null "> and birthday = #{birthday}</if>
            <if test="department != null  and department != ''"> and department = #{department}</if>
            <if test="classes != null  and classes != ''"> and classes = #{classes}</if>
        </where>
    </select>
    
    <select id="selectStudentByStuId" parameterType="String" resultMap="StudentResult">
        <include refid="selectStudentVo"/>
        where stu_id = #{stuId}
    </select>
        
    <insert id="insertStudent" parameterType="Student">
        insert into student
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="stuId != null">stu_id,</if>
            <if test="name != null">name,</if>
            <if test="age != null">age,</if>
            <if test="sex != null">sex,</if>
            <if test="birthday != null">birthday,</if>
            <if test="department != null">department,</if>
            <if test="classes != null">classes,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="stuId != null">#{stuId},</if>
            <if test="name != null">#{name},</if>
            <if test="age != null">#{age},</if>
            <if test="sex != null">#{sex},</if>
            <if test="birthday != null">#{birthday},</if>
            <if test="department != null">#{department},</if>
            <if test="classes != null">#{classes},</if>
         </trim>
    </insert>

    <update id="updateStudent" parameterType="Student">
        update student
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null">name = #{name},</if>
            <if test="age != null">age = #{age},</if>
            <if test="sex != null">sex = #{sex},</if>
            <if test="birthday != null">birthday = #{birthday},</if>
            <if test="department != null">department = #{department},</if>
            <if test="classes != null">classes = #{classes},</if>
        </trim>
        where stu_id = #{stuId}
    </update>

    <delete id="deleteStudentByStuId" parameterType="String">
        delete from student where stu_id = #{stuId}
    </delete>

    <delete id="deleteStudentByStuIds" parameterType="String">
        delete from student where stu_id in 
        <foreach item="stuId" collection="array" open="(" separator="," close=")">
            #{stuId}
        </foreach>
    </delete>

</mapper>