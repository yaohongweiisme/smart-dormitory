<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.material.inventory.mapper.MaterialInventoryMapper">
    
    <resultMap type="MaterialInventory" id="MaterialInventoryResult">
        <result property="materialId"    column="material_id"    />
        <result property="name"    column="name"    />
        <result property="number"    column="number"    />
        <result property="price"    column="price"    />
    </resultMap>

    <sql id="selectMaterialInventoryVo">
        select material_id, name, number, price from material_inventory
    </sql>

    <select id="selectMaterialInventoryList" parameterType="MaterialInventory" resultMap="MaterialInventoryResult">
        <include refid="selectMaterialInventoryVo"/>
        <where>  
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="number != null "> and number = #{number}</if>
            <if test="price != null "> and price = #{price}</if>
        </where>
    </select>
    
    <select id="selectMaterialInventoryByMaterialId" parameterType="Long" resultMap="MaterialInventoryResult">
        <include refid="selectMaterialInventoryVo"/>
        where material_id = #{materialId}
    </select>
        
    <insert id="insertMaterialInventory" parameterType="MaterialInventory">
        insert into material_inventory
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="materialId != null">material_id,</if>
            <if test="name != null">name,</if>
            <if test="number != null">number,</if>
            <if test="price != null">price,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="materialId != null">#{materialId},</if>
            <if test="name != null">#{name},</if>
            <if test="number != null">#{number},</if>
            <if test="price != null">#{price},</if>
         </trim>
    </insert>

    <update id="updateMaterialInventory" parameterType="MaterialInventory">
        update material_inventory
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null">name = #{name},</if>
            <if test="number != null">number = #{number},</if>
            <if test="price != null">price = #{price},</if>
        </trim>
        where material_id = #{materialId}
    </update>

    <delete id="deleteMaterialInventoryByMaterialId" parameterType="Long">
        delete from material_inventory where material_id = #{materialId}
    </delete>

    <delete id="deleteMaterialInventoryByMaterialIds" parameterType="String">
        delete from material_inventory where material_id in 
        <foreach item="materialId" collection="array" open="(" separator="," close=")">
            #{materialId}
        </foreach>
    </delete>

</mapper>