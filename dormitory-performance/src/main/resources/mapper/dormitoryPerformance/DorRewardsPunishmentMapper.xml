<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.performance.punishment.mapper.DorRewardsPunishmentMapper">
    
    <resultMap type="DorRewardsPunishment" id="DorRewardsPunishmentResult">
        <result property="id"    column="id"    />
        <result property="dorId"    column="dor_id"    />
        <result property="buildingId"    column="building_Id"    />
        <result property="content"    column="content"    />
        <result property="kind"    column="kind"    />
        <result property="state"    column="state"    />
        <result property="createTime"    column="create_time"    />
    </resultMap>

    <sql id="selectDorRewardsPunishmentVo">
        select id, dor_id, building_Id, content, kind, state, create_time from dor_rewards_punishment
    </sql>

    <select id="selectDorRewardsPunishmentList" parameterType="DorRewardsPunishment" resultMap="DorRewardsPunishmentResult">
        <include refid="selectDorRewardsPunishmentVo"/>
        <where>  
            <if test="dorId != null  and dorId != ''"> and dor_id = #{dorId}</if>
            <if test="buildingId != null "> and building_Id = #{buildingId}</if>
            <if test="content != null  and content != ''"> and content = #{content}</if>
            <if test="kind != null  and kind != ''"> and kind = #{kind}</if>
            <if test="state != null "> and state = #{state}</if>
        </where>
    </select>
    
    <select id="selectDorRewardsPunishmentById" parameterType="Long" resultMap="DorRewardsPunishmentResult">
        <include refid="selectDorRewardsPunishmentVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertDorRewardsPunishment" parameterType="DorRewardsPunishment" useGeneratedKeys="true" keyProperty="id">
        insert into dor_rewards_punishment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="dorId != null">dor_id,</if>
            <if test="buildingId != null">building_Id,</if>
            <if test="content != null">content,</if>
            <if test="kind != null">kind,</if>
            <if test="state != null">state,</if>
            <if test="createTime != null">create_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="dorId != null">#{dorId},</if>
            <if test="buildingId != null">#{buildingId},</if>
            <if test="content != null">#{content},</if>
            <if test="kind != null">#{kind},</if>
            <if test="state != null">#{state},</if>
            <if test="createTime != null">#{createTime},</if>
         </trim>
    </insert>

    <update id="updateDorRewardsPunishment" parameterType="DorRewardsPunishment">
        update dor_rewards_punishment
        <trim prefix="SET" suffixOverrides=",">
            <if test="dorId != null">dor_id = #{dorId},</if>
            <if test="buildingId != null">building_Id = #{buildingId},</if>
            <if test="content != null">content = #{content},</if>
            <if test="kind != null">kind = #{kind},</if>
            <if test="state != null">state = #{state},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteDorRewardsPunishmentById" parameterType="Long">
        delete from dor_rewards_punishment where id = #{id}
    </delete>

    <delete id="deleteDorRewardsPunishmentByIds" parameterType="String">
        delete from dor_rewards_punishment where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>